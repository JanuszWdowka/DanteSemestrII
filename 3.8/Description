Rozbuduj program z zadania 3.6 Bezpieczna tablica o funkcje do: alokacji pamięci na strukturę, do dealokacji pamięci struktury, do usunięcia z tablicy elementu o wybranej wartości. Funkcje powinny mieć następujące prototypy:

int array_create_struct(struct array_t **a, int N);
Funkcja alokuje pamięć na strukturę array_t oraz alokuje pamięć na tablicę N elementów i przypisuje ją do odpowiedniego pola w strukturze a. Ustawia również odpowiednie wartości w pozostałych polach struktury.

Wartość zwracana:

1 - w przypadku błędnych danych wejściowych,
2 - jeżeli nie udało się zaalokować pamięci,
0 - w przypadku sukcesu.
void array_destroy_struct(struct array_t **a);
Funkcja zwalnia przydzieloną pamięć (zarówno na strukturę a, jak i na tablicę w strukturze a).

int array_remove_item(struct array_t *a, int value);
Funkcja usuwa wszystkie elementy o wartości value z tablicy a. Proces usuwania elementów ze środka tablicy nie może zmieniać kolejności jej elementów. Na puste miejsca należy przesuwać elementy o wyższym indeksie.

Wartość zwracana:

-1 - w przypadku błędnych danych wejściowych lub
>= 0 - liczbę usuniętych elementów.
Przykład: Usunięcie 3 z tablicy 2 3 -3 3 3 20 1 da tablicę 2 -3 20 1.

Napisz program, który pobierze od użytkownika liczbę elementów, na jaką ma zostać zarezerwowana pamięć na tablicę.

W przypadku kiedy alokacja pamięci się nie powiedzie program powinien wyświetlić komunikat Failed to allocate memory i zakończyć działanie z kodem błędu 8.
W przypadku podania błędnych danych program powinien wyświetlić komunikat Incorrect input i zakończyć działanie z kodem błędu 1.
A w przypadku podania błędnej liczby elementów komunikat Incorrect input data i zakończyć działanie z kodem błędu 2.
Następnie program pyta się użytkownika, co ten chce zrobić:

0 - Zakończyć działanie.
1 - Dodać elementy do tablicy.
2 - Usunąć elementy z tablicy.
Dodawanie: Program powinien poprosić użytkownika o podanie wartości kolejnych elementów do dodawać je do tablicy. Pobieranie ma trwać do podania przez użytkownika 0 lub do wyczerpania miejsca w buforze docelowym, na co należy zareagować komunikatem Buffer is full.

Usuwanie: Program powinien poprosić użytkownika o podanie wartości kolejnych elementów i usuwać je z tablicy.

W przypadku podania opcji o wartości innej niż dopuszczalna, program powinien wyświetlić komunikat Incorrect input data i kontynuować działanie.
W przypadku podania błędnych danych program powinien wyświetlić komunikat Incorrect input i niezwłocznie zakończyć działanie z kodem błędu 1.
Po zakończeniu operacji dodawania/usuwania program powinien wyświetlić zawartość tablicy. Jeśli ta jest pusta, to wyświetlić komunikat Buffer is empty. Następnie program powinien kontynuować swoje działanie, aż do wybrania opcji 0.

Przykładowa interakcja z programem -- sukces:

Podaj pojemność tablicy: 12⏎
Co chcesz zrobic: 1⏎
Podaj kolejne liczby, które mają zostać dodane do tablicy: -6 -5 -3 6 9 -4 0⏎
-6 -5 -3 6 9 -4 ⏎
Co chcesz zrobic: 2⏎
Podaj kolejne liczby, które mają zostać usuniete z tablicy: 6 -3 0⏎
-6 -5 9 -4 ⏎
Co chcesz zrobic: 0⏎
Podaj pojemność tablicy: 19⏎
Co chcesz zrobic: 1⏎
Podaj kolejne liczby, które mają zostać dodane do tablicy: 10 -1 6 9 2 2 -5 -1 3 -6 2 10 3 3 1 8 10 0⏎
10 -1 6 9 2 2 -5 -1 3 -6 2 10 3 3 1 8 10 ⏎
Co chcesz zrobic: 2⏎
Podaj kolejne liczby, które mają zostać usuniete z tablicy: 1 2 3 6 8 9 10 -6 -5 -1 0⏎
Buffer is empty⏎
Co chcesz zrobic: 0⏎
Podaj pojemność tablicy: 15⏎
Co chcesz zrobic: 2⏎
Podaj kolejne liczby, które mają zostać usuniete z tablicy: 0⏎
Buffer is empty⏎
Co chcesz zrobic: 0⏎
Podaj pojemność tablicy: 17⏎
Co chcesz zrobic: 1⏎
Podaj kolejne liczby, które mają zostać dodane do tablicy: 6 4 -10 -5 -4 -5 8 -3 -6 -5 -10 -8 -4 -3 -4 10 -10 -10⏎
Buffer is full⏎
6 4 -10 -5 -4 -5 8 -3 -6 -5 -10 -8 -4 -3 -4 10 -10 ⏎
Co chcesz zrobic: 2⏎
Podaj kolejne liczby, które mają zostać usuniete z tablicy: 4 6 8 10 -10 -8 -6 -5 -4 -3 4 0⏎
Buffer is empty⏎
Co chcesz zrobic: 0⏎
Przykładowa interakcja z programem -- brak pamięci:

Limit sterty: 12 bajtów

Podaj pojemność tablicy: 17⏎
Failed to allocate memory⏎
Przykładowa interakcja z programem -- błąd danych:

Podaj pojemność tablicy: 14⏎
Co chcesz zrobic: 1⏎
Podaj kolejne liczby, które mają zostać dodane do tablicy: -1 5 -10 -3 1 -6 7 lAXfezYler⏎
Incorrect input
Podaj pojemność tablicy: 0⏎
Incorrect input data
Podaj pojemność tablicy: 20⏎
Co chcesz zrobic: 1⏎
Podaj kolejne liczby, które mają zostać dodane do tablicy: 2 7 2 -4 -10 -8 9 -7 -7 -5 9 -2 4 2 -8 2 8 -7 7 0⏎
2 7 2 -4 -10 -8 9 -7 -7 -5 9 -2 4 2 -8 2 8 -7 7 ⏎
Co chcesz zrobic: 2⏎
-1 0⏎
Podaj kolejne liczby, które mają zostać usuniete z tablicy: 2 7 2 -4 -10 -8 9 -7 -7 -5 9 -2 4 2 -8 2 8 -7 7 ⏎
Co chcesz zrobic: VdVIuiHw⏎
Incorrect input
Uwagi
W programie nie można deklarować zmiennej typu struct array_t, tylko wskaźnik na strukturę!
W programie nie wolno korzystać z operatora []!