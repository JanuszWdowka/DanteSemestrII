Napisz funkcję alokującą tablice typu int o podanej liczbie elementów. Wykorzystaj prototypy:

int create_array_int(int **ptr, int N);
void destroy_array_int(int **ptr);
Parametry:

ptr - wskaźnik, pod który ma zostać zapisany adres utworzonej tablicy.
N - liczba elementów do zaalokowania.
Wartość zwracana:

1 w przypadku błędnych danych wejściowych,
2 w przypadku kiedy nie udało się zaalokować pamięci lub
0 w przypadku powodzenia.
Funkcja destroy_array_int powinna zwolnić zaalokowaną pamięć i przypisać pod wskaźnik ptr wartość NULL.

Napisz program, który pobierze od użytkownika żądany rozmiar tablicy, a następnie wykorzystując przygotowaną funkcję zarezerwuje pamięć na tablicę i pobierze od użytkownika żądaną liczbę danych.

Pobrane liczby mają zostać wyświetlone w kolejności odwrotnej do tej, w której zostały pobrane, w jednej linii, oddzielone spacjami.

W przypadku podania błędnych danych program powinien wyświetlić komunikat Incorrect input i zakończyć działanie z kodem błędu 1.
W przypadku podania danych niezgodnych z treścią zadania program powinien wyświetlić komunikat Incorrect input data i zakończyć działanie z kodem błęd 2,
Jeżeli nie uda się zarezerwować żądanego obszaru pamięci program powinien wyświetlić komunikat Failed to allocate memory i zakończyć działanie z kodem błędu 8.
Przykładowa interakcja z programem -- sukces:

Podaj rozmiar tablicy: 15⏎
Podaj liczby: 13 -34 22 -91 42 -61 85 -92 70 -38 25 31 53 26 -82
-82 26 53 31 25 -38 70 -92 85 -61 42 -91 22 -34 13
Przykładowa interakcja z programem -- brak pamięci:

Limit sterty: 12 bajtów

Podaj rozmiar tablicy: 77⏎
Failed to allocate memory⏎
Przykładowa interakcja z programem -- błąd danych:

Podaj rozmiar tablicy: 0⏎
Incorrect input data
Podaj rozmiar tablicy: 11⏎
Podaj liczby: 2 68 11 -3 -86 26 16 87 -74 gMyRrxg⏎
Incorrect input
Podaj rozmiar tablicy: GClxD⏎
Incorrect input
Uwagi
W programie nie wolno korzystać z operatora []!