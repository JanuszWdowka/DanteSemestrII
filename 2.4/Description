Napisz program do znajdowania najbliższych punktów, przygotowanych przez użytkownika w pliku tekstowym.

Dany jest plik tekstowy z zapisanymi w nim współrzędnymi punktów. Każdy punkt zapisany jest w oddzielnej linii, najpierw współrzędna x, później y.

Przykład (wejście *):

5 1⏎
6 2⏎
1 1⏎
2 2⏎
Wykorzystując struktury, przygotowane w ramach wcześniejszych zadań, napisz program, który znajdzie parę punktów o najmniejszej odległości między nimi.

Jeśli w pliku znajduje się więcej niż jedna para punktów, charakteryzująca się tą samą odległością wzajemną, to program ma wyświetlić tę parę punktów, która ma mniejszą wartość dowolnej współrzędnej x.
Po wczytaniu pliku program powinien wyświetlić współrzędne znalezionej pary, w jednym wierszu, w formacie:

punkt1x punkt1y punkt2x punkt2y⏎
Przykład wyjścia (dla wejścia *):

1 1 2 2 ⏎
Jeżeli pojawi się problem z odczytem pliku, program powinien wyświetlić komunikat Couldn't open file i zakończyć działanie z kodem błędu 4.
W przypadku błędnych danych w pliku program powinien wyświetlić komunikat File corrupted i zakończyć działanie z kodem błędu 6.
Wykorzystaj strukturę point_t oraz funkcję distance z zadania 25.3 W punkt:

struct point_t {
    int x;
    int y;
};

float distance(const struct point_t* p1, const struct point_t* p2, int *err_code);
Przykładowa interakcja z programem -- sukces (2411test.txt):

Podaj sciezke:⏎
2411test.txt⏎
1 7 2 8
Przykładowa interakcja z programem -- uszkodzona zawartość pliku:

Enter file name:⏎
segment.txt⏎
File corrupted
Przykładowa interakcja z programem -- brak pliku:

Enter file name:⏎
sight.txt⏎
Couldn't open file
Uwagi
Nie wolno korzystać z tablic oraz alokacji pamięci. Jedyna tablica, jaka może być zadeklarowana, to tablica do przechowania nazwy pliku: char filename[100];